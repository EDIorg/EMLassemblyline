% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/template_geographic_coverage.R
\name{template_geographic_coverage}
\alias{template_geographic_coverage}
\title{Create geographic coverage template}
\usage{
template_geographic_coverage(
  path,
  data.path = path,
  data.table,
  lat.col,
  lon.col,
  site.col,
  empty = FALSE,
  write.file = TRUE,
  x = NULL
)
}
\arguments{
\item{path}{(character) Path to the metadata template directory.}

\item{data.path}{(character) Path to the data directory.}

\item{data.table}{(character) Table name containing geographic coordinates.}

\item{lat.col}{(character) Column name containing latitude coordinates in decimal 
degrees, where latitudes south of the equator are negative.}

\item{lon.col}{(character) Column name containing longitude coordinates in decimal 
degrees, where longitudes west of the prime meridian are negative.}

\item{site.col}{(character) Column name containing site names.}

\item{empty}{(logical) Whether to write an empty template file.}

\item{write.file}{(logical; optional) Whether to write the template file.}

\item{x}{(named list; optional) Alternative input to 
\code{template_geographical_coverage()}. Use \code{template_arguments()} 
to create \code{x}.}
}
\value{
\strong{geographic_coverage.txt} The tab delimited geographic coverage 
    template. This file is written to \code{path} unless using \code{x},
    in which case the template is added to 
    \strong{/x/templates/catvars_*.txt}.
}
\description{
Use this function to extract the unique location coordinates and names
    from a data table.
}
\details{
An existing geographic coverage template will not be overwritten by 
    subsequent calls to \code{template_geographic_coverage()}.
    
    Character encoding of metadata extracted directly from the tables are 
    converted to UTF-8 via \code{enc2utf8()}.
}
\examples{
# Initialize data package directory for template_template_geographic_coverage()
file.copy(
  from = system.file('/examples/pkg_255', package = 'EMLassemblyline'),
  to = tempdir(),
  recursive = TRUE
)

# Set working directory
setwd(paste0(tempdir(), '/pkg_255'))

# View directory contents (NOTE: geographic_coverage.txt doesn't exist)
dir('./metadata_templates')

# Template geographic coverage
template_geographic_coverage(
  path = './metadata_templates',
  data.path = './data_objects',
  data.table = 'nitrogen.csv',
  site.col = 'site_name',
  lat.col = 'site_lat',
  lon.col = 'site_lon'
)

# View directory contents (NOTE: geographic_coverage.txt exists)
dir('./metadata_templates')

# Rerunning template_geographic_coverage() does not overwrite files
template_geographic_coverage(
  path = './metadata_templates',
  data.path = './data_objects',
  data.table = 'nitrogen.csv',
  site.col = 'site_name',
  lat.col = 'site_lat',
  lon.col = 'site_lon'
)

# Remove template from directory
file.remove('./metadata_templates/geographic_coverage.txt')

# Create an empty geographic_coverage.txt template
template_geographic_coverage(
  path = './metadata_templates',
  empty = TRUE
)

# Clean up
unlink('.', recursive = TRUE)

}
