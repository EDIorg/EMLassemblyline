% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/template_table_attributes.R
\name{template_table_attributes}
\alias{template_table_attributes}
\title{Create table attributes template}
\usage{
template_table_attributes(
      path,
      data.path = path,
      data.table = NULL,
      write.file = TRUE,
      x = NULL
    )
}
\arguments{
\item{path}{(character) Path to the metadata template directory.}

\item{data.path}{(character) Path to the data directory.}

\item{data.table}{(character) Table name. If more than one, then supply as a 
vector of character strings (e.g. 
\code{data.table = c('nitrogen.csv', 'decomp.csv')}).}

\item{write.file}{(logical; optional) Whether to write the template file.}

\item{x}{(named list; optional) Alternative input to 
\code{template_table_attributes()}. Use \code{template_arguments()} 
to create \code{x}.}
}
\value{
\itemize{
        \item{\strong{attributes_*.txt} The tab delimited attributes 
        template where * is the table name from which the attributes were 
        extracted. This file is written to \code{path} unless using \code{x}, 
        in which case the template is added to 
        \strong{/x/templates/attributes_*.txt}.}
        \item{\strong{custom_units.txt} The tab delimited custom units 
        template for defining non-standard units. This file is written to 
        \code{path} unless using \code{x}, in which case the template is 
        added to \strong{/x/templates/custom_units.txt}.}
    }
}
\description{
Use this function to extract column names and classes of a data table 
    and return for user supplied column definitions and missing value codes.
    \href{https://ediorg.github.io/EMLassemblyline/articles/edit_metadata_templates.html}{Instructions for editing this template.}
}
\details{
An existing attributes template will not be overwritten by subsequent 
    calls to \code{template_table_attributes()}.
    
    Character encoding of metadata extracted directly from the tables are 
    converted to UTF-8 via \code{enc2utf8()}.
}
\examples{
# Initialize data package directory for template_table_attributes()
file.copy(
 from = system.file('/examples/pkg_250', package = 'EMLassemblyline'),
 to = tempdir(),
 recursive = TRUE
)

# Set working directory
setwd(paste0(tempdir(), '/pkg_250'))

# View directory contents (NOTE: attributes_*.txt don't exist)
dir('./metadata_templates')

# Template table attributes
template_table_attributes(
  path = './metadata_templates',
  data.path = './data_objects',
  data.table = c('decomp.csv', 'nitrogen.csv')
)

# View directory contents (NOTE: attributes_*.txt and custom_units.txt exist)
dir('./metadata_templates')

# Rerunning template_table_attributes() does not overwrite files
template_table_attributes(
  path = './metadata_templates',
  data.path = './data_objects',
  data.table = c('decomp.csv', 'nitrogen.csv')
)

# Clean up
unlink('.', recursive = TRUE)
    
}
